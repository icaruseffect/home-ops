{
  enabled: true,
  semanticCommits: "enabled",
  dependencyDashboard: true,
  dependencyDashboardTitle: "ðŸ¤– Renovate Dashboard",
  suppressNotifications: ["prIgnoreNotification"],
  rebaseWhen: "conflicted",
  "helm-values": {
    fileMatch: ["cluster/.+/helm-release\\.ya?ml$"],
  },
  kubernetes: {
    fileMatch: ["cluster/.+\\.ya?ml$"],
    ignorePaths: ["cluster/base/"],
  },
  flux: {
    fileMatch: ["cluster/.+\\.ya?ml$"],
  },
  regexManagers: [
    // regexManager to read and process HelmRelease files
    /*{
      "fileMatch": [
        "cluster/.+\\.yaml$"
      ],
      "matchStrings": [
        // helm releases
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },*/
    // regexManager to read and process cert-manager CRD's
    // {
    //   fileMatch: ["cluster/crds/cert-manager/.+\\.yaml$"],
    //   matchStrings: [
    //     "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/",
    //   ],
    //   datasourceTemplate: "helm",
    // },
    {
      description: "update cluster crds released on github",
      fileMatch: ["cluster/crds/.+\\.yaml$"],
      matchStrings: [
        "https://github.com/(?<depName>[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){1,38}/[a-z\\d-](?:[a-z\\d]|-(?=[a-z\\d])){1,100})/releases/download/(?<currentValue>v\\d+.\\d+.\\d+).+",
      ],
      datasourceTemplate: "github-tags",
    },
    // regexManager to read and process Traefik CRD's
    {
      fileMatch: ["cluster/crds/traefik/.+\\.yaml$"],
      matchStrings: [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: v(?<currentValue>.*)\n",
      ],
      datasourceTemplate: "helm",
    },
    // regexManager to read and process system-upgrade-controller CRD's
    {
      fileMatch: ["cluster/crds/system-upgrade-controller/.+\\.yaml$"],
      matchStrings: [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: v(?<currentValue>.*)\n",
      ],
      datasourceTemplate: "helm",
    },
    // regexManager to read and process kube-prometheus-stack CRDs
    {
      fileMatch: ["cluster/crds/kube-prometheus-stack/.+\\.yaml$"],
      matchStrings: [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n",
      ],
      datasourceTemplate: "helm",
    },
  ],
  packageRules: [
    // setup datasources
    {
      matchDatasources: ["helm"],
      separateMinorPatch: true,
      ignoreDeprecated: true,
    },
    // global docker datasource settings
    {
      matchDatasources: ["docker"],
      enabled: true,
      commitMessageTopic: "container image {{depName}}",
      commitMessageExtra: "to {{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}",
      matchUpdateTypes: ["major", "minor", "patch"],
    },
    // add labels according to package and update types
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["major"],
      labels: ["renovate/image", "dep/major"],
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["minor"],
      labels: ["renovate/image", "dep/minor"],
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["patch"],
      labels: ["renovate/image", "dep/patch"],
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["major"],
      labels: ["renovate/helm", "dep/major"],
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["minor"],
      labels: ["renovate/helm", "dep/minor"],
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["patch"],
      labels: ["renovate/helm", "dep/patch"],
    },
  ],
}
